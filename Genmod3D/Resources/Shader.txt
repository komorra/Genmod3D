float4x4 World;
float4x4 ViewProj;
float4 ColorMul;
float4 ColorAdd;

struct VSIN
{
	float3 position : POSITION;
	float3 normal : NORMAL;
	float2 uv : TEXCOORD;
};

struct PSIN
{
	float4 position : POSITION;
	float3 normal : TEXCOORD0;
	float2 uv : TEXCOORD1;
};

PSIN VS(VSIN input)
{
	PSIN output = (PSIN)0;
	float4 worldpos = mul(float4(input.position, 1), World);
	output.position = mul(worldpos, ViewProj);
	output.normal = normalize(mul(float4(input.normal, 0), World));
	output.uv = input.uv;

	return output;
}

float4 PS(PSIN input) : COLOR
{
	float4 col = (float4)0;

	return col * ColorMul + ColorAdd;
}

technique Default
{
	pass 
	{
		VertexShader = compile vs_3_0 VS();
		PixelShader = compile ps_3_0 PS();
	}
}